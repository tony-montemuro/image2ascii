server_tokens off;
limit_req_zone $binary_remote_addr zone=web_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=2r/s;

server {
        server_name image2ascii.net www.image2ascii.net;

        client_body_timeout 10s;
        client_header_timeout 8s;
        send_timeout 12s;

        proxy_connect_timeout 30s;
        proxy_send_timeout 5s;
        proxy_read_timeout 10s;

        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header Content-Security-Policy "default-src 'self'; img-src 'self' blob:;" always;

        location / {
                proxy_http_version 1.1;
                limit_req zone=web_limit burst=15 delay=10;
                client_max_body_size 1M;

                proxy_pass http://localhost:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api {
                proxy_http_version 1.1;
                limit_req zone=api_limit burst=5 nodelay;
                client_max_body_size 10M;
                error_page 400 401 403 404 413 429 /4xx_api_error.json;
                error_page 500 502 503 504 /5xx_api_error.json;

                proxy_pass http://localhost:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /4xx_api_error.json {
                internal;
                default_type application/json;
                return 200 '{"error": "client error $status: there was a problem with your request"}';
        }

        location /5xx_api_error.json {
                internal;
                default_type application/json;
                return 200 '{"error": "server error $status: the server failed to generate your ASCII"}';
        }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/image2ascii.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/image2ascii.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = www.image2ascii.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = image2ascii.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name image2ascii.net www.image2ascii.net;
    return 404; # managed by Certbot




}